nohup: ignoring input
训练集: 874
测试集: 219
/root/anaconda3/envs/evapatch/lib/python3.6/site-packages/transformers/optimization.py:309: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  FutureWarning,
-------------- start training --------------- 

========= epoch: 0 ==============
Token indices sequence length is longer than the specified maximum sequence length for this model (547 > 512). Running this sequence through the model will result in indexing errors
[ 1 / 37 ] loss: 0.973
[ 2 / 37 ] loss: 0.990
[ 3 / 37 ] loss: 0.998
[ 4 / 37 ] loss: 0.953
[ 5 / 37 ] loss: 1.008
[ 6 / 37 ] loss: 0.978
[ 7 / 37 ] loss: 0.995
[ 8 / 37 ] loss: 0.926
[ 9 / 37 ] loss: 1.005
[ 10 / 37 ] loss: 0.990
[ 11 / 37 ] loss: 0.972
[ 12 / 37 ] loss: 0.967
[ 13 / 37 ] loss: 0.966
[ 14 / 37 ] loss: 1.015
[ 15 / 37 ] loss: 0.950
[ 16 / 37 ] loss: 1.040
[ 17 / 37 ] loss: 0.972
[ 18 / 37 ] loss: 0.995
[ 19 / 37 ] loss: 1.006
[ 20 / 37 ] loss: 0.924
[ 21 / 37 ] loss: 0.957
[ 22 / 37 ] loss: 1.036
[ 23 / 37 ] loss: 0.928
[ 24 / 37 ] loss: 0.906
[ 25 / 37 ] loss: 0.880
[ 26 / 37 ] loss: 0.906
[ 27 / 37 ] loss: 0.889
[ 28 / 37 ] loss: 0.806
[ 29 / 37 ] loss: 0.909
[ 30 / 37 ] loss: 0.830
[ 31 / 37 ] loss: 0.883
[ 32 / 37 ] loss: 0.826
[ 33 / 37 ] loss: 0.770
[ 34 / 37 ] loss: 0.827
[ 35 / 37 ] loss: 0.802
[ 36 / 37 ] loss: 0.764
[tensor([0.3199], device='cuda:1'), tensor([0.8655], device='cuda:1'), tensor([0.8294], device='cuda:1'), tensor([0.6579], device='cuda:1'), tensor([0.3264], device='cuda:1'), tensor([0.6622], device='cuda:1'), tensor([0.7775], device='cuda:1'), tensor([0.8197], device='cuda:1'), tensor([0.7873], device='cuda:1'), tensor([0.7481], device='cuda:1'), tensor([0.8591], device='cuda:1'), tensor([0.5981], device='cuda:1'), tensor([0.7321], device='cuda:1'), tensor([0.8081], device='cuda:1'), tensor([0.8153], device='cuda:1'), tensor([0.8163], device='cuda:1'), tensor([0.6273], device='cuda:1'), tensor([0.7575], device='cuda:1'), tensor([0.7872], device='cuda:1'), tensor([0.7731], device='cuda:1'), tensor([0.9033], device='cuda:1'), tensor([0.8280], device='cuda:1'), tensor([0.8038], device='cuda:1'), tensor([0.6408], device='cuda:1'), tensor([0.8745], device='cuda:1'), tensor([0.6506], device='cuda:1'), tensor([0.8997], device='cuda:1'), tensor([0.4181], device='cuda:1'), tensor([0.8768], device='cuda:1'), tensor([0.7482], device='cuda:1'), tensor([0.7034], device='cuda:1'), tensor([0.5439], device='cuda:1'), tensor([0.8584], device='cuda:1'), tensor([0.8779], device='cuda:1'), tensor([0.8002], device='cuda:1'), tensor([0.6092], device='cuda:1'), tensor([0.7800], device='cuda:1'), tensor([0.8540], device='cuda:1'), tensor([0.8763], device='cuda:1'), tensor([0.7275], device='cuda:1'), tensor([0.8678], device='cuda:1'), tensor([0.8399], device='cuda:1'), tensor([0.7305], device='cuda:1'), tensor([0.7643], device='cuda:1'), tensor([0.0671], device='cuda:1'), tensor([0.4384], device='cuda:1'), tensor([0.5028], device='cuda:1'), tensor([0.7410], device='cuda:1'), tensor([0.7899], device='cuda:1'), tensor([0.8751], device='cuda:1'), tensor([0.7411], device='cuda:1'), tensor([0.7663], device='cuda:1'), tensor([0.7172], device='cuda:1'), tensor([0.7632], device='cuda:1'), tensor([0.7590], device='cuda:1'), tensor([0.8733], device='cuda:1'), tensor([0.8763], device='cuda:1'), tensor([0.9001], device='cuda:1'), tensor([0.8149], device='cuda:1'), tensor([0.8471], device='cuda:1'), tensor([0.5061], device='cuda:1'), tensor([0.4377], device='cuda:1'), tensor([0.4449], device='cuda:1'), tensor([0.7599], device='cuda:1'), tensor([0.8844], device='cuda:1'), tensor([0.7277], device='cuda:1'), tensor([0.6909], device='cuda:1'), tensor([0.8480], device='cuda:1'), tensor([0.9024], device='cuda:1'), tensor([0.8479], device='cuda:1'), tensor([0.8785], device='cuda:1'), tensor([0.8737], device='cuda:1'), tensor([0.8748], device='cuda:1'), tensor([0.2357], device='cuda:1'), tensor([0.8645], device='cuda:1'), tensor([0.8848], device='cuda:1'), tensor([0.8687], device='cuda:1'), tensor([0.8225], device='cuda:1'), tensor([0.8663], device='cuda:1'), tensor([0.6544], device='cuda:1'), tensor([0.8301], device='cuda:1'), tensor([0.8360], device='cuda:1'), tensor([0.8434], device='cuda:1'), tensor([0.7528], device='cuda:1'), tensor([0.6289], device='cuda:1'), tensor([0.7240], device='cuda:1'), tensor([0.8221], device='cuda:1'), tensor([0.7230], device='cuda:1'), tensor([0.8871], device='cuda:1'), tensor([0.8907], device='cuda:1'), tensor([0.8176], device='cuda:1'), tensor([0.8156], device='cuda:1'), tensor([0.8731], device='cuda:1'), tensor([0.7280], device='cuda:1'), tensor([0.8475], device='cuda:1'), tensor([0.8341], device='cuda:1'), tensor([0.8608], device='cuda:1'), tensor([0.8696], device='cuda:1'), tensor([0.7263], device='cuda:1'), tensor([0.7853], device='cuda:1'), tensor([0.7300], device='cuda:1'), tensor([0.8355], device='cuda:1'), tensor([0.7677], device='cuda:1'), tensor([0.8722], device='cuda:1'), tensor([0.3997], device='cuda:1'), tensor([0.2991], device='cuda:1'), tensor([0.8129], device='cuda:1'), tensor([0.7387], device='cuda:1'), tensor([0.8199], device='cuda:1'), tensor([0.3869], device='cuda:1'), tensor([0.8213], device='cuda:1'), tensor([0.8481], device='cuda:1'), tensor([0.8470], device='cuda:1'), tensor([0.8541], device='cuda:1'), tensor([0.5276], device='cuda:1'), tensor([0.7585], device='cuda:1'), tensor([0.8411], device='cuda:1'), tensor([0.6906], device='cuda:1'), tensor([0.8929], device='cuda:1'), tensor([0.7123], device='cuda:1'), tensor([0.7722], device='cuda:1'), tensor([0.8566], device='cuda:1'), tensor([0.8808], device='cuda:1'), tensor([0.8692], device='cuda:1'), tensor([0.8382], device='cuda:1'), tensor([0.8635], device='cuda:1'), tensor([0.8952], device='cuda:1'), tensor([0.8705], device='cuda:1'), tensor([0.8633], device='cuda:1'), tensor([0.8811], device='cuda:1'), tensor([0.7851], device='cuda:1'), tensor([0.1514], device='cuda:1'), tensor([0.7442], device='cuda:1'), tensor([0.8615], device='cuda:1'), tensor([0.8965], device='cuda:1'), tensor([0.7418], device='cuda:1'), tensor([0.5220], device='cuda:1'), tensor([0.5470], device='cuda:1'), tensor([0.8356], device='cuda:1'), tensor([0.8362], device='cuda:1'), tensor([0.7348], device='cuda:1'), tensor([0.8455], device='cuda:1'), tensor([0.6708], device='cuda:1'), tensor([0.6841], device='cuda:1'), tensor([0.9200], device='cuda:1'), tensor([0.7953], device='cuda:1'), tensor([0.3892], device='cuda:1'), tensor([0.8202], device='cuda:1'), tensor([0.4629], device='cuda:1'), tensor([0.5715], device='cuda:1'), tensor([0.8122], device='cuda:1'), tensor([0.6701], device='cuda:1'), tensor([0.8598], device='cuda:1'), tensor([0.8071], device='cuda:1'), tensor([0.8297], device='cuda:1'), tensor([0.8540], device='cuda:1'), tensor([0.8065], device='cuda:1'), tensor([0.7314], device='cuda:1'), tensor([0.8318], device='cuda:1'), tensor([0.8331], device='cuda:1'), tensor([0.7966], device='cuda:1'), tensor([0.8332], device='cuda:1'), tensor([0.7944], device='cuda:1'), tensor([0.7692], device='cuda:1'), tensor([0.8727], device='cuda:1'), tensor([0.6679], device='cuda:1'), tensor([0.7831], device='cuda:1'), tensor([0.6663], device='cuda:1'), tensor([0.7298], device='cuda:1'), tensor([0.7857], device='cuda:1'), tensor([0.8846], device='cuda:1'), tensor([0.7635], device='cuda:1'), tensor([0.8235], device='cuda:1'), tensor([0.6905], device='cuda:1'), tensor([0.8186], device='cuda:1'), tensor([0.1244], device='cuda:1'), tensor([0.8581], device='cuda:1'), tensor([0.3734], device='cuda:1'), tensor([0.6556], device='cuda:1'), tensor([0.8496], device='cuda:1'), tensor([0.8408], device='cuda:1'), tensor([0.8966], device='cuda:1'), tensor([0.7308], device='cuda:1'), tensor([0.8467], device='cuda:1'), tensor([0.5944], device='cuda:1'), tensor([0.6830], device='cuda:1'), tensor([0.8555], device='cuda:1'), tensor([0.8627], device='cuda:1'), tensor([0.8221], device='cuda:1'), tensor([0.8189], device='cuda:1'), tensor([0.4532], device='cuda:1'), tensor([0.7569], device='cuda:1'), tensor([0.7974], device='cuda:1'), tensor([0.8374], device='cuda:1'), tensor([0.8805], device='cuda:1'), tensor([0.7798], device='cuda:1'), tensor([0.2931], device='cuda:1'), tensor([0.5657], device='cuda:1'), tensor([0.9069], device='cuda:1'), tensor([0.8926], device='cuda:1'), tensor([0.4862], device='cuda:1'), tensor([0.8220], device='cuda:1'), tensor([0.7400], device='cuda:1'), tensor([0.8087], device='cuda:1'), tensor([0.8740], device='cuda:1'), tensor([0.8876], device='cuda:1'), tensor([0.8940], device='cuda:1'), tensor([0.8959], device='cuda:1'), tensor([0.7895], device='cuda:1'), tensor([0.6523], device='cuda:1'), tensor([0.7899], device='cuda:1'), tensor([0.8150], device='cuda:1'), tensor([0.5369], device='cuda:1'), tensor([0.6725], device='cuda:1'), tensor([0.8562], device='cuda:1'), tensor([0.5541], device='cuda:1'), tensor([0.8388], device='cuda:1'), tensor([0.7978], device='cuda:1'), tensor([0.8443], device='cuda:1')]
[tensor([0.4151], device='cuda:1'), tensor([0.8273], device='cuda:1'), tensor([0.0802], device='cuda:1'), tensor([0.7633], device='cuda:1'), tensor([0.8192], device='cuda:1'), tensor([0.5034], device='cuda:1'), tensor([0.8521], device='cuda:1'), tensor([0.3643], device='cuda:1'), tensor([0.3694], device='cuda:1'), tensor([0.8538], device='cuda:1'), tensor([0.3835], device='cuda:1'), tensor([0.0955], device='cuda:1'), tensor([0.7562], device='cuda:1'), tensor([0.3144], device='cuda:1'), tensor([0.7773], device='cuda:1'), tensor([0.0380], device='cuda:1'), tensor([0.6361], device='cuda:1'), tensor([0.6754], device='cuda:1'), tensor([0.7445], device='cuda:1'), tensor([0.6985], device='cuda:1'), tensor([0.7417], device='cuda:1'), tensor([0.4476], device='cuda:1'), tensor([0.7936], device='cuda:1'), tensor([0.6858], device='cuda:1'), tensor([-0.0579], device='cuda:1'), tensor([0.6024], device='cuda:1'), tensor([0.8568], device='cuda:1'), tensor([0.7314], device='cuda:1'), tensor([-0.1032], device='cuda:1'), tensor([0.7983], device='cuda:1'), tensor([0.1712], device='cuda:1'), tensor([0.3243], device='cuda:1'), tensor([0.8441], device='cuda:1'), tensor([0.9082], device='cuda:1'), tensor([0.1170], device='cuda:1'), tensor([0.7966], device='cuda:1'), tensor([0.6925], device='cuda:1'), tensor([0.7848], device='cuda:1'), tensor([0.7915], device='cuda:1'), tensor([0.3739], device='cuda:1'), tensor([0.6139], device='cuda:1'), tensor([0.0387], device='cuda:1'), tensor([0.7315], device='cuda:1'), tensor([0.5498], device='cuda:1'), tensor([0.3878], device='cuda:1'), tensor([0.7296], device='cuda:1'), tensor([0.8675], device='cuda:1'), tensor([0.7004], device='cuda:1'), tensor([0.6673], device='cuda:1'), tensor([0.8595], device='cuda:1'), tensor([0.3864], device='cuda:1'), tensor([0.5641], device='cuda:1'), tensor([0.1385], device='cuda:1'), tensor([0.5595], device='cuda:1'), tensor([0.7064], device='cuda:1'), tensor([0.3325], device='cuda:1'), tensor([0.3256], device='cuda:1'), tensor([0.8851], device='cuda:1'), tensor([0.6290], device='cuda:1'), tensor([-0.0667], device='cuda:1'), tensor([0.4913], device='cuda:1'), tensor([0.8176], device='cuda:1'), tensor([0.2925], device='cuda:1'), tensor([0.7028], device='cuda:1'), tensor([-0.3735], device='cuda:1'), tensor([0.5770], device='cuda:1'), tensor([0.0291], device='cuda:1'), tensor([0.7575], device='cuda:1'), tensor([0.8426], device='cuda:1'), tensor([0.7965], device='cuda:1'), tensor([0.2857], device='cuda:1'), tensor([0.7001], device='cuda:1'), tensor([-0.0781], device='cuda:1'), tensor([0.1920], device='cuda:1'), tensor([0.8461], device='cuda:1'), tensor([0.2679], device='cuda:1'), tensor([0.8452], device='cuda:1'), tensor([0.2477], device='cuda:1'), tensor([0.2115], device='cuda:1'), tensor([0.3336], device='cuda:1'), tensor([0.4512], device='cuda:1'), tensor([0.0655], device='cuda:1'), tensor([0.8530], device='cuda:1'), tensor([0.5058], device='cuda:1'), tensor([0.5287], device='cuda:1'), tensor([0.5649], device='cuda:1'), tensor([0.0723], device='cuda:1'), tensor([0.7108], device='cuda:1'), tensor([0.8374], device='cuda:1'), tensor([0.9056], device='cuda:1'), tensor([-0.0310], device='cuda:1'), tensor([0.5370], device='cuda:1'), tensor([0.4550], device='cuda:1'), tensor([0.8467], device='cuda:1'), tensor([0.0833], device='cuda:1'), tensor([0.4859], device='cuda:1'), tensor([0.6898], device='cuda:1'), tensor([-0.1899], device='cuda:1'), tensor([0.6347], device='cuda:1'), tensor([0.8360], device='cuda:1'), tensor([0.6729], device='cuda:1'), tensor([0.2812], device='cuda:1'), tensor([0.1301], device='cuda:1'), tensor([0.0614], device='cuda:1'), tensor([0.2604], device='cuda:1'), tensor([0.1918], device='cuda:1'), tensor([0.7538], device='cuda:1'), tensor([0.7136], device='cuda:1'), tensor([0.7866], device='cuda:1'), tensor([0.4193], device='cuda:1'), tensor([0.7180], device='cuda:1'), tensor([0.7595], device='cuda:1'), tensor([0.5554], device='cuda:1'), tensor([0.8534], device='cuda:1'), tensor([0.5058], device='cuda:1'), tensor([0.8060], device='cuda:1'), tensor([0.7194], device='cuda:1'), tensor([0.1037], device='cuda:1'), tensor([0.7440], device='cuda:1'), tensor([0.6915], device='cuda:1'), tensor([0.5064], device='cuda:1'), tensor([0.5544], device='cuda:1'), tensor([0.8600], device='cuda:1'), tensor([0.8896], device='cuda:1'), tensor([0.0444], device='cuda:1'), tensor([0.3729], device='cuda:1'), tensor([0.9119], device='cuda:1'), tensor([0.8456], device='cuda:1'), tensor([0.0920], device='cuda:1'), tensor([0.1982], device='cuda:1'), tensor([0.6612], device='cuda:1'), tensor([0.6870], device='cuda:1'), tensor([0.2702], device='cuda:1'), tensor([0.7910], device='cuda:1'), tensor([0.7486], device='cuda:1'), tensor([0.8091], device='cuda:1'), tensor([0.4788], device='cuda:1'), tensor([0.3408], device='cuda:1'), tensor([0.4036], device='cuda:1'), tensor([0.8563], device='cuda:1'), tensor([0.6996], device='cuda:1'), tensor([0.3277], device='cuda:1'), tensor([0.6756], device='cuda:1'), tensor([0.5547], device='cuda:1'), tensor([0.7380], device='cuda:1'), tensor([0.2589], device='cuda:1'), tensor([0.5588], device='cuda:1'), tensor([0.3480], device='cuda:1'), tensor([0.3419], device='cuda:1'), tensor([0.6481], device='cuda:1'), tensor([0.5345], device='cuda:1'), tensor([0.4385], device='cuda:1'), tensor([0.3166], device='cuda:1'), tensor([0.2771], device='cuda:1'), tensor([0.7040], device='cuda:1'), tensor([0.2656], device='cuda:1'), tensor([0.7276], device='cuda:1'), tensor([0.3858], device='cuda:1'), tensor([0.7411], device='cuda:1'), tensor([0.4235], device='cuda:1'), tensor([0.2958], device='cuda:1'), tensor([0.7967], device='cuda:1'), tensor([0.4872], device='cuda:1'), tensor([0.8172], device='cuda:1'), tensor([0.8122], device='cuda:1'), tensor([0.1582], device='cuda:1'), tensor([0.8497], device='cuda:1'), tensor([-0.0850], device='cuda:1'), tensor([0.7305], device='cuda:1'), tensor([0.7670], device='cuda:1'), tensor([0.8526], device='cuda:1'), tensor([0.8078], device='cuda:1'), tensor([0.3099], device='cuda:1'), tensor([0.5568], device='cuda:1'), tensor([0.8198], device='cuda:1'), tensor([0.3747], device='cuda:1'), tensor([0.2409], device='cuda:1'), tensor([0.7959], device='cuda:1'), tensor([0.5082], device='cuda:1'), tensor([-0.0536], device='cuda:1'), tensor([0.3346], device='cuda:1'), tensor([0.8572], device='cuda:1'), tensor([0.7658], device='cuda:1'), tensor([0.7874], device='cuda:1'), tensor([0.8011], device='cuda:1'), tensor([0.6432], device='cuda:1'), tensor([0.8881], device='cuda:1'), tensor([-0.1197], device='cuda:1'), tensor([0.0759], device='cuda:1'), tensor([0.1289], device='cuda:1'), tensor([0.0830], device='cuda:1'), tensor([0.7150], device='cuda:1'), tensor([0.8431], device='cuda:1'), tensor([0.1487], device='cuda:1'), tensor([0.7369], device='cuda:1'), tensor([0.0742], device='cuda:1'), tensor([0.0777], device='cuda:1'), tensor([0.2965], device='cuda:1'), tensor([-0.2180], device='cuda:1'), tensor([0.7285], device='cuda:1'), tensor([0.3525], device='cuda:1'), tensor([0.5940], device='cuda:1'), tensor([0.2515], device='cuda:1'), tensor([0.8153], device='cuda:1'), tensor([0.6889], device='cuda:1'), tensor([-0.2657], device='cuda:1'), tensor([0.8693], device='cuda:1'), tensor([-0.1680], device='cuda:1'), tensor([0.5133], device='cuda:1'), tensor([0.5801], device='cuda:1'), tensor([-0.1464], device='cuda:1'), tensor([0.0003], device='cuda:1'), tensor([0.1689], device='cuda:1'), tensor([0.5735], device='cuda:1'), tensor([0.4692], device='cuda:1'), tensor([0.7216], device='cuda:1'), tensor([0.5560], device='cuda:1'), tensor([-0.0266], device='cuda:1'), tensor([0.8599], device='cuda:1')]
  0%|          | 0/99 [00:00<?, ?it/s]temp_result, accuracy: 0.5365296803652968 threshold: 0.01
temp_result, accuracy: 0.5365296803652968 threshold: 0.02
temp_result, accuracy: 0.5388127853881278 threshold: 0.03
temp_result, accuracy: 0.54337899543379 threshold: 0.04
temp_result, accuracy: 0.545662100456621 threshold: 0.05
temp_result, accuracy: 0.545662100456621 threshold: 0.06
temp_result, accuracy: 0.547945205479452 threshold: 0.07
temp_result, accuracy: 0.5570776255707762 threshold: 0.08
temp_result, accuracy: 0.5639269406392694 threshold: 0.09
temp_result, accuracy: 0.5684931506849316 threshold: 0.1
temp_result, accuracy: 0.5707762557077626 threshold: 0.11
 11%|█         | 11/99 [00:00<00:00, 102.14it/s]temp_result, accuracy: 0.5730593607305936 threshold: 0.12
temp_result, accuracy: 0.5730593607305936 threshold: 0.13
temp_result, accuracy: 0.5776255707762558 threshold: 0.14
temp_result, accuracy: 0.5799086757990868 threshold: 0.15
temp_result, accuracy: 0.5799086757990868 threshold: 0.16
temp_result, accuracy: 0.5821917808219178 threshold: 0.17
temp_result, accuracy: 0.5844748858447488 threshold: 0.18
temp_result, accuracy: 0.5844748858447488 threshold: 0.19
temp_result, accuracy: 0.591324200913242 threshold: 0.2
temp_result, accuracy: 0.591324200913242 threshold: 0.21
temp_result, accuracy: 0.593607305936073 threshold: 0.22
 22%|██▏       | 22/99 [00:00<00:00, 102.46it/s]temp_result, accuracy: 0.593607305936073 threshold: 0.23
temp_result, accuracy: 0.591324200913242 threshold: 0.24
temp_result, accuracy: 0.5958904109589042 threshold: 0.25
temp_result, accuracy: 0.6004566210045662 threshold: 0.26
temp_result, accuracy: 0.6073059360730594 threshold: 0.27
temp_result, accuracy: 0.6118721461187214 threshold: 0.28
temp_result, accuracy: 0.6164383561643836 threshold: 0.29
temp_result, accuracy: 0.6187214611872146 threshold: 0.3
temp_result, accuracy: 0.6210045662100456 threshold: 0.31
temp_result, accuracy: 0.6232876712328768 threshold: 0.32
temp_result, accuracy: 0.6278538812785388 threshold: 0.33
 33%|███▎      | 33/99 [00:00<00:00, 102.46it/s]temp_result, accuracy: 0.634703196347032 threshold: 0.34
temp_result, accuracy: 0.6415525114155252 threshold: 0.35
temp_result, accuracy: 0.6438356164383562 threshold: 0.36
temp_result, accuracy: 0.6484018264840182 threshold: 0.37
temp_result, accuracy: 0.6529680365296804 threshold: 0.38
temp_result, accuracy: 0.6575342465753424 threshold: 0.39
temp_result, accuracy: 0.6552511415525114 threshold: 0.4
temp_result, accuracy: 0.6575342465753424 threshold: 0.41
temp_result, accuracy: 0.6598173515981736 threshold: 0.42
temp_result, accuracy: 0.6621004566210046 threshold: 0.43
temp_result, accuracy: 0.6598173515981736 threshold: 0.44
 44%|████▍     | 44/99 [00:00<00:00, 102.48it/s]temp_result, accuracy: 0.6598173515981736 threshold: 0.45
temp_result, accuracy: 0.6621004566210046 threshold: 0.46
temp_result, accuracy: 0.6621004566210046 threshold: 0.47
temp_result, accuracy: 0.6643835616438356 threshold: 0.48
temp_result, accuracy: 0.6666666666666666 threshold: 0.49
temp_result, accuracy: 0.6689497716894978 threshold: 0.5
temp_result, accuracy: 0.6757990867579908 threshold: 0.51
temp_result, accuracy: 0.678082191780822 threshold: 0.52
temp_result, accuracy: 0.6757990867579908 threshold: 0.53
temp_result, accuracy: 0.678082191780822 threshold: 0.54
temp_result, accuracy: 0.6757990867579908 threshold: 0.55
 56%|█████▌    | 55/99 [00:00<00:00, 102.50it/s]temp_result, accuracy: 0.6894977168949772 threshold: 0.56
temp_result, accuracy: 0.6917808219178082 threshold: 0.57
temp_result, accuracy: 0.6940639269406392 threshold: 0.58
temp_result, accuracy: 0.6963470319634704 threshold: 0.59
temp_result, accuracy: 0.6940639269406392 threshold: 0.6
temp_result, accuracy: 0.6940639269406392 threshold: 0.61
temp_result, accuracy: 0.6963470319634704 threshold: 0.62
temp_result, accuracy: 0.6940639269406392 threshold: 0.63
temp_result, accuracy: 0.6986301369863014 threshold: 0.64
temp_result, accuracy: 0.7009132420091324 threshold: 0.65
temp_result, accuracy: 0.6894977168949772 threshold: 0.66
 67%|██████▋   | 66/99 [00:00<00:00, 102.44it/s]temp_result, accuracy: 0.6872146118721462 threshold: 0.67
temp_result, accuracy: 0.6872146118721462 threshold: 0.68
temp_result, accuracy: 0.6917808219178082 threshold: 0.69
temp_result, accuracy: 0.6940639269406392 threshold: 0.7
temp_result, accuracy: 0.7031963470319634 threshold: 0.71
temp_result, accuracy: 0.7100456621004566 threshold: 0.72
temp_result, accuracy: 0.7009132420091324 threshold: 0.73
temp_result, accuracy: 0.6963470319634704 threshold: 0.74
temp_result, accuracy: 0.6940639269406392 threshold: 0.75
temp_result, accuracy: 0.6894977168949772 threshold: 0.76
temp_result, accuracy: 0.682648401826484 threshold: 0.77
 78%|███████▊  | 77/99 [00:00<00:00, 102.42it/s]temp_result, accuracy: 0.6757990867579908 threshold: 0.78
temp_result, accuracy: 0.6598173515981736 threshold: 0.79
temp_result, accuracy: 0.6666666666666666 threshold: 0.8
temp_result, accuracy: 0.6621004566210046 threshold: 0.81
temp_result, accuracy: 0.6484018264840182 threshold: 0.82
temp_result, accuracy: 0.6278538812785388 threshold: 0.83
temp_result, accuracy: 0.6027397260273972 threshold: 0.84
temp_result, accuracy: 0.591324200913242 threshold: 0.85
temp_result, accuracy: 0.593607305936073 threshold: 0.86
temp_result, accuracy: 0.5707762557077626 threshold: 0.87
temp_result, accuracy: 0.5365296803652968 threshold: 0.88
 89%|████████▉ | 88/99 [00:00<00:00, 102.29it/s]temp_result, accuracy: 0.5251141552511416 threshold: 0.89
temp_result, accuracy: 0.5045662100456622 threshold: 0.9
temp_result, accuracy: 0.5 threshold: 0.91
temp_result, accuracy: 0.502283105022831 threshold: 0.92
 93%|█████████▎| 92/99 [00:00<00:00, 101.24it/s]
Traceback (most recent call last):
  File "./src/train.py", line 284, in <module>
    max_epoch=max_epoch, start_epoch=start_epoch, data_id=str(i))
  File "./src/train.py", line 189, in train
    correct_recall = TP / (TP + N - TN)
ZeroDivisionError: division by zero
